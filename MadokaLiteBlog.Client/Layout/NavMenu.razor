@using MadokaLiteBlog.Client.Services
@using Microsoft.AspNetCore.Components.Authorization

<div class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MadokaLiteBlog</a>
        <button class="navbar-toggler" type="button" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="@NavMenuCssClass navbar-collapse">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="posts">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Posts
                    </NavLink>
                </li>
                @if (currentUser != null)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="editor">
                            <span class="bi bi-card-text-nav-menu" aria-hidden="true"></span> 写文章
                        </NavLink>
                    </li>
                }
            </ul>
            
            <ul class="navbar-nav">
                <li class="nav-item">
                    @if (currentUser == null)
                    {
                        <NavLink class="nav-link" href="login">
                            <span class="bi bi-box-arrow-in-right" aria-hidden="true"></span> 登录
                        </NavLink>
                    }
                    else
                    {
                        <div class="d-flex align-items-center">
                            <img src="@currentUser.AvatarUrl" class="rounded-circle me-2" style="width: 32px; height: 32px;" alt="用户头像" />
                            <span class="text-light">@currentUser.UserName</span>
                        </div>
                    }
                </li>
            </ul>
        </div>
    </div>
</div>

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject IUserService UserService

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : "show";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    private UserInfo? currentUser;

    protected override async Task OnInitializedAsync()
    {
        await GetUserInfo();
        // 订阅认证状态变化
        AuthStateProvider.AuthenticationStateChanged += AuthenticationStateChangedHandler;
    }

    private async Task GetUserInfo()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        
        if (user.Identity?.IsAuthenticated == true)
        {
            // 使用 UserService 获取用户信息
            var userInfo = await UserService.GetCurrentUserInfo();
            if (userInfo != null)
            {
                currentUser = new UserInfo
                {
                    UserName = userInfo.Username ?? "",
                    AvatarUrl = userInfo.AvatarUrl ?? "/images/default-avatar.png"
                };
            }
        }
        else
        {
            currentUser = null;
        }
        
        // 确保UI更新
        await InvokeAsync(StateHasChanged);
    }

    private async void AuthenticationStateChangedHandler(Task<AuthenticationState> task)
    {
        await GetUserInfo();
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        // 取消订阅以防止内存泄漏
        AuthStateProvider.AuthenticationStateChanged -= AuthenticationStateChangedHandler;
    }

    private class UserInfo
    {
        public string UserName { get; set; } = "";
        public string AvatarUrl { get; set; } = "";
    }
}